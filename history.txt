    1  vim
    2  nano
    3  pwd
    4  cd /home
    5  mkdir animals
    6  /
    7  sudo
    8  -m
    9  mkdir -m
   10  sudo -i
   11  pwd
   12  man
   13  man man
   14  sudo
   15  sudo -i
   16  cd /
   17  pwd
   18  ls
   19  vim
   20  history
   21  etc ls
   22  pwd
   23  cd etc
   24  ls
   25  cat passwd
   26  cd /
   27  ssh-keygen
   28  cd .ssh
   29  ls
   30  cat id_ed25519.pub
   31  ssh ec2-user@linux.itcareerhub.de
   32  [ec2-user@ip-10-0-42-153 [ec2-user@ip-10-0-42-153 sh ec2-user@linux.itcareerhub.d https://aws.amazon.com/linux/amazon-linux-2023/pwd
   33  ssh 
   34  ssh ec2-user@ip-10-0-42-153
   35  cd ssh [ec2-user@ip-10-0-42-153 
   36  cd ssh ec2-user@ip-10-0-42-153 
   37  cd /
   38  ssh ec2-user@ip-10-0-42-153
   39  vim
   40  cd home
   41  exit
   42  cd /
   43  ssh ec2-user@linux.itcareerhub.de
   44  env
   45  exit
   46  pwd
   47  ssh ec2-user@linux.itcareerhub.de
   48  env
   49  bash
   50  env
   51  -
   52  export MY_PLAY=hallo
   53  env
   54  echo '$MY_PLAY'
   55  echo '$my_play'
   56  echo "$MY_PLAY"
   57  echo $my_play
   58  echo $MY_PLAY
   59  ECHO $PATH
   60  echo $PATH
   61  env | grep my_play
   62  env | grep MY_PLAY
   63  top
   64  btop
   65  bitop
   66  btop
   67  ps aux
   68  ps -ef
   69  ssh ec2-user@linux.itcareerhub.de
   70  htop
   71  sudo apt install btop
   72  btop
   73  ps
   74  ps aux
   75  ps -ef
   76  top
   77  btop
   78  free
   79  free -a
   80  free -h
   81  ssh ec2-user@linux.itcareerhub.de
   82  ps -ef | grep '/usr/sbin/sshg' | awk '{printf "PID %s PPID %s \n", $2, $3}'
   83  free
   84  free -h
   85  btop
   86  cat /etc/os-release 
   87  neofeth
   88  neofetch
   89  sudo apt update
   90  sudo apt update && sudo apt upgrade
   91  history
   92  ssh ec2-user@linux.itcareerhub.de
   93  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management ~/Загрузки/
   94  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management ~/Downloads/
   95  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management /home/prusha/Downloads/
   96  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management /Users/ICH/Downloads/
   97  cd /
   98  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management /Users/ICH/Downloads/
   99  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management ~/Downloads/
  100  pwd
  101  cd home
  102  ls
  103  cd ~
  104  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management ~/Downloads/
  105  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management /home/prusha/Downloads/.process_management
  106  scp ec2-user@linux.itcareerhub.de:/opt/111124-ptm/Vadym/.process_management /home/prusha/.process_management
  107  cd /home/prusha/
  108  cd /home
  109  cd prusha
  110  pwd
  111  ls -a
  112  cat .process_management 
  113  history
  114  btop
  115  ls -la
  116  git --version
  117  git bash --version
  118  cd .ssh
  119  ls
  120  cat id_ed25519.pub
  121  git clone git@github.com:Prusha-cell/ich.git
  122  ls
  123  mv ich ../
  124  ls
  125  cd /
  126  ls
  127  cd .ssh
  128  cd ~
  129  ls
  130  ls -a
  131  cd ich
  132  ls
  133  ls -a
  134  cd .git
  135  ls -a
  136  cd ..
  137  git config --global user.name "Vadym_Prudnikov"
  138  git config --global user.email "anubis2016prusha@gmail.com"
  139  git config --list
  140  git config ls
  141  ls
  142  ls a
  143  ls -a
  144  git status
  145  cd ..
  146  git status
  147  mkdir 111124-ptm
  148  git init
  149  git status
  150  ls -a
  151  rm -rf .git
  152  ls -a
  153  cd 111124-ptm/
  154  git init
  155  git status
  156  cd ~
  157  xbyx
  158  sudo instal tmux
  159  sudo apt install tmux
  160  sudo snap install
  161  sudo innstall snap
  162  sudo install snap
  163  sudo apt install snap
  164  tmux
  165  vim
  166  ls -a
  167  cd ich
  168  ls -a
  169  cat .git
  170  cd .git
  171  ls -a
  172  cd /tmp
  173  vim file.txt
  174  ls
  175  df -h
  176  df -h head -3n
  177  df -h | head -n 3
  178  df -h | head -n 3 > file.txt 
  179  cat file.txt 
  180  ls -la file.txt 
  181  chmod g+wx file.txt 
  182  ls -la file.txt 
  183  chmod uo-rw file.txt 
  184  ls -la file.txt 
  185  touch myfirstbashscript.sh
  186  ls
  187  ls -la myfirstbashscript.sh 
  188  chmod a+x myfirstbashscript.sh 
  189  ls -la myfirstbashscript.sh 
  190  export USER=Vadym
  191  ls
  192  echo $user
  193  echo $USER
  194  echo $USER >> myfirstbashscript.sh 
  195  cat myfirstbashscript.sh 
  196  vim myfirstbashscript.sh 
  197  unset USER 
  198  echo $USER
  199  vim myfirstbashscript.sh 
  200  > myfirstbashscript.sh 
  201  cat myfirstbashscript.sh 
  202  vim myfirstbashscript.sh 
  203  cat myfirstbashscript.sh 
  204  vim myfirstbashscript.sh 
  205  cat myfirstbashscript.sh 
  206  ./myfirstbashscript.sh
  207  cat myfirstbashscript.sh >> file.txt 
  208  cat myfirstbashscript.sh >> tmp/file.txt 
  209  ls
  210  cat myfirstbashscript.sh >> /tmp/file.txt 
  211  ls -la file.txt 
  212  chmod a+w file.txt 
  213  cat myfirstbashscript.sh >> /tmp/file.txt 
  214  cat file.txt 
  215  chmod a+r file.txt 
  216  cat file.txt 
  217  history | >> tmp/file.txt
  218  history >> file.txt 
  219  cat file.txt 
  220  export_file /tmp/file.txt /home/prusha/file.txt
  221  cd~
  222  cd ~
  223  export_file /tmp/file.txt /home/prusha/file.txt
  224  cd /home/
  225  export_file /tmp/file.txt /home/prusha/file.txt
  226  history
  227  export_file /tmp/file.txt /home/prusha/file.txt
  228  git --version
  229  cd ich
  230  ls -a
  231  cd git_intro
  232  cd .git
  233  ls
  234  cd ~
  235  pwd
  236  mkdir git_intro
  237  cd git_intro/
  238  git init
  239  ls
  240  ls -a
  241  cd /users
  242  pwd
  243  ls
  244  git status
  245  git add th.jpg
  246  git status
  247  git commit -m "added picture"
  248  git status
  249  git log
  250  git branch -M main
  251  git status
  252  git remote add origin git@github.com:Prusha_cell/git_intro.git
  253  git remote -v
  254  git push -u origin main
  255  ls ~/.ssh
  256  ssh -T git@github.com
  257  git push -u origin main
  258  git config --get remote.origin.url
  259  git remote show origin
  260  git remote set-url origin git@github.com:Prusha-cell/git_intro.git
  261  git remote -v
  262  git config --get remote.origin.url
  263  git remote show origin
  264  git push -u origin main
  265  ls
  266  touch README.md
  267  ls
  268  nano README.md
  269  cat README.md
  270  git push -u origin main
  271  git status
  272  rm th.jpg:Zone.Identifier
  273  ls
  274  git add .
  275  git status
  276  git commit "added file README.md"
  277  git commit -a -m "added file README.md"
  278  git status
  279  git push -u origin main
  280  git pull
  281  git status
  282  git push -u origin main
  283  git-pull(1)
  284  git log --oneline --decorate --graph --all
  285  git merge c7202b3
  286  git pull origin main --allow-unrelated-histories
  287  git config --list
  288  git status
  289  git branch
  290  git config pull.rebase true
  291  git pull origin main --allow-unrelated-histories
  292  ls
  293  git status
  294  git pull
  295  git status
  296  git push -u origin main
  297  pwd
  298  touch myfirstbashscript.sh
  299  ls
  300  ls -l
  301  chmod a+x myfirstbashscript.sh 
  302  ls -l
  303  vim myfirstbashscript.sh 
  304  echo $USER
  305  cat myfirstbashscript.sh 
  306  ./myfirstbashscript.sh 
  307  vim myfirstbashscript.sh 
  308  ./myfirstbashscript.sh 
  309  vim myfirstbashscript.sh 
  310  ./myfirstbashscript.sh 
  311  vim myfirstbashscript.sh 
  312  cat myfirstbashscript.sh 
  313  ./myfirstbashscript.sh 
  314  whoami
  315  ./myfirstbashscript.sh 
  316  cat myfirstbashscript.sh 
  317  vim myfirstbashscript.sh 
  318  ./myfirstbashscript.sh 
  319  vim myfirstbashscript.sh 
  320  ./myfirstbashscript.sh 
  321  vim myfirstbashscript.sh 
  322  ./myfirstbashscript.sh 
  323  vim myfirstbashscript.sh 
  324  ./myfirstbashscript.sh 
  325  vim myfirstbashscript.sh 
  326  ./myfirstbashscript.sh 
  327  vim myfirstbashscript.sh 
  328  ./myfirstbashscript.sh 
  329  vim myfirstbashscript.sh 
  330  ./myfirstbashscript.sh 
  331  ps -ef
  332  wc
  333  wc -l
  334  ps -aux
  335  vim myfirstbashscript.sh 
  336  ps -ef | grep "bioset"
  337  ps -ef | grep "bioset" | grep -v "grep"
  338  ps -aux | grep "bioset" | grep -v "grep"
  339  ps -aux | grep "bioset"
  340  ps -ef | grep "bioset" | grep -v "grep" | wc -l
  341  vim myfirstbashscript.sh 
  342  ./myfirstbashscript.sh 
  343  vim myfirstbashscript.sh 
  344  ./myfirstbashscript.sh 
  345  vim myfirstbashscript.sh 
  346  ls -la
  347  awk
  348  ls -la | awk $1
  349  ls -la /etc/passwd
  350  ls -la /etc/passwd | awk '{print $1}'
  351  vim myfirstbashscript.sh 
  352  ./myfirstbashscript.sh 
  353  mv myfirstbashscript.sh myfirstbashscript.txt
  354  ls
  355  ./myfirstbashscript.sh 
  356  ./myfirstbashscript.txt 
  357  history
  358  find ich
  359  pwd
  360  cd prusha
  361  ls
  362  cd ich
  363  ls
  364  la -a
  365  .
  366  ..
  367  cd .
  368  cd ..
  369  ls -a
  370  mv myfirstbashscript.txt ich
  371  ls
  372  ls -a
  373  cd ich
  374  ls
  375  git status
  376  git add myfirstbashscript.txt 
  377  git status
  378  git commit -m "added myfirstbashscript.txt"
  379  git status
  380  remote -v
  381  git remote -v
  382  git push -u origin main
  383  git status
  384  python --version
  385  git config
  386  git config --list --show-origin
  387  pwd
  388  ls
  389  ls -la
  390  cd .config
  391  ls
  392  ls -la
  393  git config --list
  394  git config user.name
  395  cd ~
  396  python --version
  397  git help config
  398  find ich
  399  cd ich
  400  ls -la
  401  git status
  402  git status -s
  403  git status --short
  404  git status
  405  find .gitignore
  406  cat ich
  407  ls
  408  ls -la
  409  ls -a
  410  cd .gitignore
  411  cat .gitignore 
  412  man gitignore 
  413  vim .gitignore 
  414  git diff
  415  pwd
  416  git commit
  417  git log
  418  pwd
  419  ls -la
  420  cd ich
  421  git log -stat
  422  git log --stat
  423  git log --decjrete
  424  git log --decorate
  425  git branch
  426  git branch -a
  427  git branch new-branch
  428  git branch
  429  git branch -d new-branch
  430  git branch 
  431  git checkout -b new-branch_1
  432  git branch 
  433  git checkout main
  434  git branch 
  435  git status
  436  cd home
  437  pwd
  438  cd prusha
  439  cd /prusha
  440  cd ..
  441  pwd
  442  cd prusha
  443  cd /prusha
  444  cd home
  445  cd /home
  446  cd /prusha
  447  ls -la
  448  ls -a
  449  cd /prusha
  450  cd prusha
  451  ls
  452  ls -a
  453  mkdir repositories
  454  ls
  455  cd 111124-ptm/
  456  ls
  457  ls -a
  458  cd git_intro
  459  cd .
  460  cd ..
  461  cd git_intro/
  462  ls -a
  463  cd ..
  464  cd ich
  465  ls -a
  466  cd ..
  467  find . -tipe f -name "*.git" -execdir mv "$(pwd)" /repositories \;
  468  find . -type f -name "*.git" -execdir mv "$(pwd)" /repositories \;
  469  ls -a
  470  cd repositories/
  471  ls -a
  472  ls -la
  473  ls
  474  ls -A
  475  ls -a
  476  mv ich repositories
  477  cd ..
  478  mv ich repositories
  479  ls -a
  480  mv git_intro, 111124-ptm repositories/
  481  cd repositories/
  482  ls
  483  cd ..
  484  mv git_intro repositories/
  485  cd repositories/
  486  ls
  487  cd ..
  488  ls
  489  ls -a
  490  cd .ssh
  491  ls -la
  492  ls -a
  493  cd ..
  494  cd repositories/
  495  ls
  496  mkdir git-branch
  497  ls
  498  cd git-branch/
  499  git init
  500  ls -a
  501  git status
  502  git remote add origin git@github.com:Prusha-cell/git-branch.git
  503  git branch -M main
  504  git remote -v
  505  git branch
  506  git status
  507  git branch
  508  cd ..
  509  cd repositories/ich
  510  cd ich
  511  git branch 
  512  cd ..
  513  cd git-branch/
  514  ls -a
  515  git branch
  516  git log --all --decorate --oneline --graph
  517  git branch gitignore
  518  git branch new-gitignore
  519  cd ..
  520  rm -rf git-branch
  521  ls
  522  mkdir git-branch
  523  ls
  524  cd git-branch/
  525  git init
  526  ls -a
  527  git branch
  528  touch .gitignore
  529  ls -a
  530  vim .gitignore 
  531  echo .gitignore 
  532  echo $.gitignore
  533  cat .gitignore 
  534  git status
  535  git add .gitignore 
  536  git status
  537  git commit -m "Added file .gitignore"
  538  git branch -M main
  539  git status
  540  git branch
  541  git remote add origin git@github.com:Prusha-cell/git-branch.git
  542  git remote -v
  543  git status
  544  git branch
  545  checkout -b gitignore
  546  git checkout -b gitignore
  547  git branch
  548  git push -u origin main
  549  git branch
  550  git checkout main
  551  git branch
  552  git push -u origin gitignore
  553  git branch
  554  ls -a
  555  vim .gitignore 
  556  cat .gitignore 
  557  git status
  558  add .gitignore
  559  git add .gitignore 
  560  git status
  561  git commit -m "Added file .gitignore modified"
  562  git status
  563  git push -u origin main
  564  find . -type f -name "*.git" -execdir mv "$(pwd)" /repositories \;SELECT t1.name, t2.competencies_id, t3.title
  565  FROM Teachers t1
  566  INNER JOIN Teachers2Competencies t2 ON t2.teacher_id = t1.id
  567  find .bashrc
  568  vim .bashrc
  569  pwd
  570  ssh ec2-user@linux.itcareerhub.de
  571  history
  572  ssh ec2-user@linux.itcareerhub.de
  573  pwd
  574  ls
  575  cd repositories/
  576  ls
  577  cd git-branch/
  578  ls
  579  ls -la
  580  ls -a
  581  git log --graph
  582  00
  583  exit
  584  exit
  585  tmax
  586  tmux
  587  pwd
  588  зцв
  589  pwd
  590  ls
  591  cd repositories/
  592  ls
  593  git clone git@github.com:USERNAME/REPOSITORY_NAME.git
  594  git clone git@github.com:Prusha-cell/create_branchescreate_branches.git
  595  git clone git@github.com:Prusha-cell/create_branches.git
  596  ls
  597  cd create_branches/
  598  touch .gitignore
  599  vim .gitignore
  600  ls -a
  601  cat .gitignore 
  602  git status
  603  git add .gitignore 
  604  git status
  605  git commit -m "Added file .gitignore"
  606  git status
  607  git push origin main
  608  git branch
  609  git checkout -b feature
  610  git branch
  611  git status
  612  ды -ф
  613  ls -a
  614  vim .gitignore
  615  git status
  616  vim README.md 
  617  git status
  618  git add .
  619  git status
  620  git commit -m "Added changes to the new branch"
  621  git status
  622  git push -u origin feature
  623  git commit --amend
  624  git log
  625  git commit --amend
  626  git log
  627  git branch
  628  git checkout main
  629  git branch
  630  git merge feature
  631  git graph
  632  git grapf
  633  git --graph
  634  git log --graph --oneline --all
  635  git branch
  636  history > history.txt
